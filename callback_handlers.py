from aiogram import Router 
from aiogram.types import CallbackQuery
from aiogram.exceptions import TelegramBadRequest
from aiogram.fsm.context import FSMContext

from main import bot
from keyboards import *
from cache import TempData
from states import VKR_States
from additional_functions import *

callback_router = Router() # –º—ã —Ç–∞–∫ –∂–µ –∫–∞–∫ –∏ –≤ message_handlers —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞—à–µ–≥–æ 
# –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞ 

PHOTO_ID_ONE = 'AgACAgIAAxkBAAOiZZWRQKHD18GVlXxmc3XkxFmR4hMAAnjhMRscK7BIt9XPfdWp4AEBAAMCAAN4AAM0BA' 
PHOTO_ID_TWO = "AgACAgIAAxkBAAIBfmWa6HPHq5XIOxnWV6a2uYAC92b0AAJe3DEbaM7ZSAYGx_tW1zjIAQADAgADeAADNAQ"
PHOTO_ID_THREE = "AgACAgIAAxkBAAICbGWwE24UiAT4pQIrc9LsGF1ADA8oAAIm-TEbST6ASQKK5zr7tZwEAQADAgADeQADNAQ"# –°–∏–≥–Ω–∞–ª (–∏–ª–∏ –∑–∞–ø—Ä–æ—Å) –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–π
PHOTO_ID_FOUR = "AgACAgIAAxkBAAICiGWwH6_EFC_7PDuUpf-YsZB6wAcPAAJ6_DEbST6AScrsLIxx-SyXAQADAgADeAADNAQ"


@callback_router.callback_query(VKR_States.lit_review)
async def lit_review(callback: CallbackQuery, state: FSMContext):
    if callback.data == "VKR":
        await callback.message.edit_text(reply_markup=vkr().as_markup(), text="–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ –í–ö–† üòá?")
        await state.clear()
    elif callback.data in ("content_analysis", "quoting", "lit_list", "libraries",
                           "hist_rev", "laws", "experience"):
        await callback.answer(text="–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

@callback_router.callback_query(VKR_States.practice)
async def practice(callback: CallbackQuery, state: FSMContext):
    if callback.data == "VKR":
        await callback.message.edit_text(reply_markup=vkr().as_markup(), text="–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ –í–ö–† üòá?")
        await state.clear()
    elif callback.data in ("doc_analysis", "survey", "expert_survey", "focus_group", 
                           "tools", "respondents", "ethics", "passage", "analis"):
        await callback.answer(text="–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    elif callback.data == "interview":
        await callback.message.edit_text(reply_markup=survey().as_markup(), text="–ö–∞–∫ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é")
    elif callback.data == "empirical_part":
        await callback.message.edit_text(text="–ö–∞–∫ –¥–µ–ª–∞—Ç—å –ø—Ä–∞–∫—Ç–∏–∫—É?\n–ó–¥–µ—Å—å —Å–æ–±—Ä–∞–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è", reply_markup=practical_part().as_markup())

@callback_router.callback_query(VKR_States.structure)
async def structure_proc(callback: CallbackQuery, state: FSMContext):
    
    full_callback = callback.data.split(":")
    data = await state.get_data()

    if callback.data == "VKR":
        await callback.message.edit_text(reply_markup=vkr().as_markup(), text="–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ –í–ö–† üòá?")
        await state.clear()
    elif callback.data == "structure":
        await callback.message.edit_text(text="–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å–æ –°—Ç—Ä—É–∫—Ç—É—Ä–æ–π –í–ö–† üßê", reply_markup=StructureVKR().structure().as_markup())
    elif "actuality" in callback.data:

        try:
            data = await state.get_data() 
            fst_cb = data["first_entry_cd"]
        except KeyError:
            await state.update_data(first_entry_cd=callback.data)
            data = await state.get_data()
            fst_cb = data["first_entry_cd"]
        
        if len(full_callback) == 2:
            temp_menu = await callback.message.edit_text(text="–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏", reply_markup=StructureVKR().fork(prev_callback=fst_cb).as_markup())
            await state.update_data(temp_menu=temp_menu)
        else:
            if callback.data == "structure":
                await callback.message.edit_text(text="–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å–æ –°—Ç—Ä—É–∫—Ç—É—Ä–æ–π –í–ö–† üßê", reply_markup=StructureVKR().structure().as_markup())
            else:    
                page_number = int(full_callback[2])
                op_type = full_callback[1]
                fork_status = full_callback[0]
            
                if fork_status == "theory":
                    match page_number:
                        case 1:
                            await callback.message.edit_text(text="–ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –µ–µ –∑–Ω–∞—á–∏–º–æ—Å—Ç—å –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –µ–µ —Ä–µ—à–µ–Ω–∏—è. üòä\n\n–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ üòâ:\n- –ø—Ä–æ–±–ª–µ–º–∞, –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–µ\n- –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π, –ø–µ—Ä–µ–º–µ–Ω\n- –Ω–æ–≤–∏–∑–Ω–∞\n- –∑–Ω–∞—á–∏–º–æ—Å—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è\n\n–î–ª—è –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ –≤—ã–¥–µ–ª–µ–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–π –∞–±–∑–∞—Ü –≤–æ –≤–≤–µ–¥–µ–Ω–∏–∏. –í –Ω–µ–º –Ω—É–∂–Ω–æ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å –Ω–µ—Ä–µ—à–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Å—Ç–µ–ø–µ–Ω—å –µ–µ –∏–∑—É—á–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –Ω–æ–≤–∏–∑–Ω—É, —Å—Å—ã–ª–∞—è—Å—å –Ω–∞ –¥—Ä—É–≥–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. üìú", reply_markup=page_surfer(page_n=page_number, callback_data=f"{fork_status}:{op_type}").as_markup())
                        case 2:
                            await callback.message.edit_text(text="–ß–µ–º —è –µ—â—ë –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?", reply_markup=end_of_proc("actuality", "actuality").as_markup())
                        case 0:
                            await callback.message.edit_text(text="–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏", reply_markup=StructureVKR().fork(prev_callback=fst_cb).as_markup())
                else:
                    match page_number:
                        case 1:
                            data = await state.get_data()
                            await data["temp_menu"].delete()
                            temp_menu = await bot.send_photo(chat_id=TempData.user_id, photo=PHOTO_ID_TWO, caption="–ß—Ç–æ –µ—Å–ª–∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –Ω–µ –æ—á–µ–≤–∏–¥–Ω–∞ —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∑–≥–ª—è–¥–∞? üò≥", reply_markup=page_surfer(page_n=page_number, callback_data=f"{fork_status}:{op_type}").as_markup())
                            await state.update_data(temp_menu=temp_menu)
                        case 2:
                            data = await state.get_data()
                            await data["temp_menu"].delete()
                            temp_menu = await callback.message.answer(text="–ú–æ–∂–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ ü§î:\n- —Å—Ç–µ–ø–µ–Ω—å –∏–∑—É—á–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã\n- —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–Ω–Ω–∏—Ö –∏ —Ç–µ–∫—É—â–∏—Ö –º–µ—Ä\n- –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –Ω–∞—É–∫–∏ –∏ –æ—Ç—Ä–∞—Å–ª–∏.\n\n–ú–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–∞—É—á–Ω—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ —Ç–µ–º–µ, —á–∞—Å—Ç–æ—Ç—É –≤—ã—Ö–æ–¥–∞ –≤ —Å–≤–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –≤ —Ä–∞–º–∫–∞—Ö –¥–∞–Ω–Ω–æ–π –∏ —Å–º–µ–∂–Ω—ã—Ö —Ç–µ–º, –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∏—Å–∫—É—Å—Å–∏–π. ü§ì\n–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ —Ç–µ–º–µ.\n\n–ò–∑–±–µ–≥–∞–π —Ç–∞–∫–∏—Ö –æ—à–∏–±–æ–∫, –∫–∞–∫:\n- —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞\n- —Å–ª–∞–±–∞—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ü–∏—è\n- –Ω–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å —Ç–µ–º–æ–π\n- –∑–∞–∏–º—Å—Ç–≤–æ–≤–∞–Ω–∏—è (–ø–ª–∞–≥–∏–∞—Ç) ‚õîÔ∏è", 
                                                                      reply_markup=page_surfer(page_n=page_number, callback_data=f"{fork_status}:{op_type}").as_markup())
                            await state.update_data(temp_menu=temp_menu)
                        case 3:
                            await callback.message.edit_text(text="–ß–µ–º —è –µ—â—ë –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?", reply_markup=end_of_proc("actuality", "actuality").as_markup())
                        case 0:
                            await data["temp_menu"].delete()
                            temp_menu = await callback.message.answer(text="–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏", reply_markup=StructureVKR().fork(prev_callback=fst_cb).as_markup())
                            await state.update_data(temp_menu=temp_menu)
   
    elif callback.data == "problem:1":
        await first_state_entry(cb_data=callback,
                                state_tuple=(state, VKR_States.problem),
                                cb_text="–ü—Ä–æ–±–ª–µ–º–∞ - —ç—Ç–æ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤–∞—è —Å–∏—Ç—É–∞—Ü–∏—è, —Ç—Ä–µ–±—É—é—â–∞—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è. ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –ø—Ä–µ–∂–Ω–µ–≥–æ –∑–Ω–∞–Ω–∏—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –∞ –Ω–æ–≤–æ–µ –µ—â–µ –Ω–µ –ø—Ä–∏–Ω—è–ª–æ —Ä–∞–∑–≤–∏—Ç–æ–π —Ñ–æ—Ä–º—ã.")
    elif callback.data == "goal:1":
        await first_state_entry(cb_data=callback,
                                state_tuple=(state, VKR_States.goal),
                                cb_text="–¶–µ–ª—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è - —ç—Ç–æ –∫–æ–Ω–µ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–µ–ª –±—ã –¥–æ—Å—Ç–∏—á—å –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã. üßê")
    elif callback.data == "obj_sbj:1":
        await first_state_entry(cb_data=callback,
                                state_tuple=(state, VKR_States.object),
                                cb_text="–ü—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ üòâ:\n–û–±—ä–µ–∫—Ç ‚Äî —ç—Ç–æ —á—Ç–æ-—Ç–æ (–∫—Ç–æ-—Ç–æ), —á—Ç–æ (–∫–æ–≥–æ) —Ç—ã –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –∏–∑—É—á–∞—Ç—å.\n–ü—Ä–µ–¥–º–µ—Ç ‚Äì —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –∏–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –∫–∞–∫–∏–º-—Ç–æ –æ–±—Ä–∞–∑–æ–º –º–æ–≥—É—Ç –Ω–∞ –Ω–µ–≥–æ –≤–ª–∏—è—Ç—å.")
    elif callback.data == "hypothesis:1":
        await first_state_entry(cb_data=callback,
                                state_tuple=(state, VKR_States.hypothesis),
                                cb_text="–ì–∏–ø–æ—Ç–µ–∑–∞ - —ç—Ç–æ –Ω–∞—É—á–Ω–æ–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ, –¥–∞—é—â–µ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Ñ–∞–∫—Ç–æ–≤, —è–≤–ª–µ–Ω–∏–π –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–¥–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–ª–∏ –æ–ø—Ä–æ–≤–µ—Ä–≥–Ω—É—Ç—å. üßê")
    elif "theme" in callback.data:
        
        try:
            data = await state.get_data() 
            fst_cb = data["first_entry_cd"]
        except KeyError:
            await state.update_data(first_entry_cd=callback.data)
            data = await state.get_data()
            fst_cb = data["first_entry_cd"]
        
        if len(full_callback) == 2:
            temp_menu = await callback.message.edit_text(text="–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ —Ç–µ–º–µ", reply_markup=StructureVKR().fork(prev_callback=fst_cb).as_markup())
            await state.update_data(temp_menu=temp_menu)
        else:
            if callback.data == "structure":
                await callback.message.edit_text(text="–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å–æ –°—Ç—Ä—É–∫—Ç—É—Ä–æ–π –í–ö–† üßê", reply_markup=StructureVKR().structure().as_markup())
            else:    
                page_number = int(full_callback[2])
                op_type = full_callback[1]
                fork_status = full_callback[0]

            if fork_status == "theory":
                match page_number:
                    case 1:
                        await callback.message.edit_text(text="–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ!‚ùóÔ∏è\n–¢–µ–º—É —Ä–∞–±–æ—Ç—ã –û–ß–ï–ù–¨ –≤–∞–∂–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å.\n–ö–∞–∫–∏–µ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã? üòñ:\n- –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–µ–º—ã –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞;\n- –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –∏–ª–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–µ;\n- –†–∞–∑–º—ã—Ç–æ—Å—Ç—å –∏–ª–∏ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç—å –≤—ã—Ä–∞–∂–µ–Ω–∏–π.\n–í—Å—ë —ç—Ç–æ –º–æ–∂–µ—Ç –ø–æ–º–µ—à–∞—Ç—å —Ç–µ–±–µ –Ω–∞ –∑–∞—â–∏—Ç–µ, –ø–æ—ç—Ç–æ–º—É –æ—Ç–Ω–µ—Å–∏—Å—å –∫ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–µ —Å–µ—Ä—å–µ–∑–Ω–æ. üßê\n–ù–æ –Ω–µ –±–æ–π—Å—è! –í —Ç–µ–º—É –º–æ–∂–Ω–æ –≤–Ω–æ—Å–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏\n\n–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ—Å—Ç–æ–π–Ω–æ–π —Ç–µ–º—ã üòé:\n- –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å, –∑–Ω–∞—á–∏–º–æ—Å—Ç—å\n- –ß–µ—Ç–∫–æ—Å—Ç—å, —è—Å–Ω–æ—Å—Ç—å\n- –û—Ç—Ä–∞–∂–µ–Ω–∏–µ —Å—É—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞\n- –ö—Ä–∞—Ç–∫–æ—Å—Ç—å –∏ –µ–º–∫–æ—Å—Ç—å\n\n–ß—Ç–æ –µ—â–µ? ü§î:\n- –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –¥–æ–ª–∂–Ω–æ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞—Ç—å –µ–≥–æ —Å—É—Ç—å, –æ—Ç–º–µ—á–∞—è, —á—Ç–æ –∞–≤—Ç–æ—Ä –∏–∑—É—á–∏–ª –∏ –∫ —á–µ–º—É —Å—Ç—Ä–µ–º–∏–ª—Å—è;\n- –¢–µ–º–∞ –∏ —Ü–µ–ª—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω—ã –ø–µ—Ä–µ—Å–µ–∫–∞—Ç—å—Å—è —Ç–µ—Å–Ω—ã–º –æ–±—Ä–∞–∑–æ–º, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å (–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å) –¥—Ä—É–≥ –¥—Ä—É–≥–∞;\n- –í –Ω–∞–∑–≤–∞–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–æ—Å–ª–µ–∂–∏–≤–∞—Ç—å—Å—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, –æ–±—ä–µ–∫—Ç –∏ –ø—Ä–µ–¥–º–µ—Ç;\n- –ó–∞–≥–ª–∞–≤–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—É –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ (—Ç–æ –µ—Å—Ç—å –∏–∑—É—á–∞–µ–º–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –Ω–∞—à–ª–∞ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è);\n- –¢–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–∑—ã–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å –Ω–µ —Ç–æ–ª—å–∫–æ —É –∞–≤—Ç–æ—Ä–∞, –Ω–æ –∏ —É —á–∏—Ç–∞—Ç–µ–ª—è, –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å (–Ω–æ –≤—Å–µ–≥–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –º–µ—Ä—É);\n- –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Ñ–æ—Ä–º—É–ª–∏—Ä—É–µ—Ç—Å—è –∫—Ä–∞—Ç–∫–æ –∏ –µ–º–∫–æ –≤ –ø—Ä–æ—Å—Ç–æ–π —Ñ–æ—Ä–º–µ (–±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –æ–±–æ—Ä–æ—Ç–æ–≤ –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π, –≤–≤–æ–¥–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏ –ø—Ä.);\n- –ó–∞–≥–ª–∞–≤–∏–µ –¥–æ–ª–∂–Ω–æ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞, —Ç–æ –µ—Å—Ç—å –∏–º–µ–Ω–Ω–æ –≤ —Ç–∞–∫–æ–º —Ä–∞–∫—É—Ä—Å–µ, —Å —Ç–∞–∫–∏–º –∞—Ä—Å–µ–Ω–∞–ª–æ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–Ω–µ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –Ω–µ –ø—Ä–æ–≤–æ–¥–∏–ª–æ—Å—å;\n- –ó–∞–≥–ª–∞–≤–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–µ—Ç –µ–≥–æ –∑–Ω–∞—á–∏–º–æ—Å—Ç—å –∏ –ø—Ä–∏–∑—ã–≤–∞–µ—Ç –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º.", 
                                                         reply_markup=page_surfer(page_n=page_number, callback_data=f"{fork_status}:{op_type}").as_markup())    
                    case 2:
                        await callback.message.edit_text(text="–ß–µ–º —è –µ—â—ë –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?", reply_markup=end_of_proc("theme", "theme").as_markup())
                    case 0:
                        await callback.message.edit_text(text="–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ —Ç–µ–º–µ", reply_markup=StructureVKR().fork(prev_callback=fst_cb).as_markup())
            else:
                match page_number:
                    case 1:
                        data = await state.get_data()
                        await data["temp_menu"].delete()
                        temp_menu = await bot.send_photo(chat_id=TempData.user_id, photo=PHOTO_ID_ONE, caption="–í–æ—Ç –ø–æ–ª–µ–∑–Ω—ã–µ —Å–ª–æ–≤–∞", reply_markup=page_surfer(page_n=page_number, callback_data=f"{fork_status}:{op_type}").as_markup())
                        await state.update_data(temp_menu=temp_menu)
                    case 2:
                        data = await state.get_data()
                        await data["temp_menu"].delete()
                        await callback.message.answer(text="–ß–µ–º —è –µ—â—ë –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?", reply_markup=end_of_proc("theme", "theme").as_markup())
                        await state.clear()
                    case 0:
                        await data["temp_menu"].delete()
                        temp_menu = await callback.message.answer(text="–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ —Ç–µ–º–µ", reply_markup=StructureVKR().fork(prev_callback=fst_cb).as_markup())
                        await state.update_data(temp_menu=temp_menu)
          
@callback_router.callback_query(VKR_States.problem)
async def problem_proc(callback: CallbackQuery, state: FSMContext):
    
    if "problem" in callback.data:
        full_callback = callback.data.split(":")
        page_number = int(full_callback[1])
        cb_data = full_callback[0]
        
        match page_number:
            case 1:
                await callback.message.edit_text(text="–ü—Ä–æ–±–ª–µ–º–∞ - —ç—Ç–æ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤–∞—è —Å–∏—Ç—É–∞—Ü–∏—è, —Ç—Ä–µ–±—É—é—â–∞—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è. ‚ö†Ô∏è–ü—Ä–æ–±–ª–µ–º–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –ø—Ä–µ–∂–Ω–µ–≥–æ –∑–Ω–∞–Ω–∏—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –∞ –Ω–æ–≤–æ–µ –µ—â–µ –Ω–µ –ø—Ä–∏–Ω—è–ª–æ —Ä–∞–∑–≤–∏—Ç–æ–π —Ñ–æ—Ä–º—ã.", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 2:
                await callback.message.edit_text(text="–ö–∞–∫–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –¥–æ–ª–∂–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º–∞? üßê:\n- –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–æ–¥–∏–∫—Ç–æ–≤–∞–Ω–æ –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–º–∏ —Ñ–∞–∫—Ç–æ—Ä–∞–º–∏\n- –ø—Ä–æ–±–ª–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–µ –∏–ª–∏ –ø—Ä–∏–∫–ª–∞–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –Ω–∞—É–∫–∏", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 3:
                await callback.message.edit_text(text="–ß—Ç–æ –µ—â–µ?:\n- –ø—Ä–æ–±–ª–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ—Å–∏–ª—å–Ω–æ–π (–Ω–µ –≤–∑–≤–∞–ª–∏–≤–∞–π –Ω–∞ —Å–µ–±—è —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ üòä)\n- –ø—Ä–æ–±–ª–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π, —Ç–æ–π, –∫–æ—Ç–æ—Ä–∞—è –µ—Å—Ç—å —Å–µ–π—á–∞—Å –∏ –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ —Ä–µ—à–∏—Ç—å –≤ —Ö–æ–¥–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è\n- –ø—Ä–æ–±–ª–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –æ—Ç–ª–∏—á–∞—Ç—å —Ç–≤–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Ç –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã—Ö —Ä–∞–±–æ—Ç (–Ω–æ–≤—ã–µ —Ñ–∞–∫—Ç—ã, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∏–¥–µ–∏, –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –∏–¥–µ–∏ —Å–æ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏)\n- –ø—Ä–æ–±–ª–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –æ—Ç—Ä–∞–∂–∞—Ç—å –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ‚ú®–∏–¥–µ–∞–ª—É‚ú®, –æ–ø–∏—Å–∞–Ω–Ω–æ–º—É –≤ —Ç–µ–æ—Ä–∏–∏", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 4:
                await callback.message.edit_text(text='–í–æ—Ç "–ø–æ–ª–µ–∑–Ω—ã–µ —Å–ª–æ–≤–∞" üòá\n"–Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–∞–∫–∏—Ö-—Ç–æ –º–µ—Ä (—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ—à–µ–Ω–∏—è ü§ù) ..."\n"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Ç–∞–∫–æ–≥–æ-—Ç–æ —Å–µ—Ä–≤–∏—Å–∞ / –∫–ª–∏–µ–Ω—Ç—ã / –ª—é–¥–∏ —Å –∫–∞–∫–∏–º-—Ç–æ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ–º / —Å—Ç—É–¥–µ–Ω—Ç—ã / –∂–µ–Ω—â–∏–Ω—ã –ø–æ–∂–∏–ª–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ —Ç.–¥. (–ö–¢–û?üë©üßë) ..."\n"–Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã —Å–∏—Å—Ç–µ–º–æ–π / –∫–∞—á–µ—Å—Ç–≤–æ–º —Ä–∞–±–æ—Ç—ã / —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º / –ª—é–±—ã–º –¥—Ä—É–≥–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (–ø—Ä–æ–±–ª–µ–º–∞ - —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ ‚òπÔ∏è)\n–ò–õ–ò\n"—É—Ä–æ–≤–µ–Ω—å –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã - –≤—ã—Å–æ–∫, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã - –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞, —á—Ç–æ —É–≥–æ–¥–Ω–æ –µ—â–µ (–ß–¢–û?üìà) - –ù–ï –∏–¥–µ–∞–ª—å–Ω–æ üíé"', reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 5:
                await callback.message.edit_text(text="–ß–µ–º —è –µ—â—ë –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?", reply_markup=end_of_proc("problem").as_markup())
                await state.clear()
            case 0:
                await callback.message.edit_text(text="–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å–æ –°—Ç—Ä—É–∫—Ç—É—Ä–æ–π –í–ö–† üßê", reply_markup=StructureVKR().structure().as_markup())
                await state.set_state(VKR_States.structure)
              
@callback_router.callback_query(VKR_States.goal)
async def goal_proc(callback: CallbackQuery, state: FSMContext):
     
    if "goal" in callback.data:
        full_callback = callback.data.split(":")
        page_number = int(full_callback[1])
        cb_data = full_callback[0]
        
        match page_number:
            case 1:
                await callback.message.edit_text(text="–¶–µ–ª—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è - —ç—Ç–æ –∫–æ–Ω–µ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–µ–ª –±—ã –¥–æ—Å—Ç–∏—á—å –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã. üßê", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 2:
                await callback.message.edit_text(text="–í–∏–¥—ã —Ü–µ–ª–µ–π ü§î:\n- –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —è–≤–ª–µ–Ω–∏–π, –Ω–µ –∏–∑—É—á–µ–Ω–Ω—ã—Ö —Ä–∞–Ω–µ–µ\n- –≤—ã—è–≤–ª–µ–Ω–∏–µ –≤–∑–∞–∏–º–æ—Å–≤—è–∑–∏ –Ω–µ–∫–∏—Ö —è–≤–ª–µ–Ω–∏–π\n- –∏–∑—É—á–µ–Ω–∏–µ —Ä–∞–∑–≤–∏—Ç–∏—è —è–≤–ª–µ–Ω–∏–π\n- –æ–±–æ–±—â–µ–Ω–∏–µ, –≤—ã—è–≤–ª–µ–Ω–∏–µ –æ–±—â–∏—Ö –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–µ–π\n- —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–π", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 3:
                await callback.message.edit_text(text="'–ü–æ–ª–µ–∑–Ω—ã–µ —Å–ª–æ–≤–∞' –¥–ª—è —Ü–µ–ª–∏üòá\n–í—ã—è–≤–ª–µ–Ω–∏–µ, –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ, —É—Ç–æ—á–Ω–µ–Ω–∏–µ, –∫–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–µ, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, –æ–±–æ–±—â–µ–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, —Å–æ–∑–¥–∞–Ω–∏–µ, —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 4:
                await callback.message.edit_text(text='–ó–∞–¥–∞—á–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è - —ç—Ç–æ –≤—ã–±–æ—Ä –ø—É—Ç–µ–π –∏ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –≤—ã–¥–≤–∏–Ω—É—Ç–æ–π –≥–∏–ø–æ—Ç–µ–∑–æ–π. üßê', reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 5:
                await callback.message.edit_text(text='–û—Ç–Ω–µ—Å–∏—Å—å –∫ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏—é –∑–∞–¥–∞—á —Å–µ—Ä—å–µ–∑–Ω–æ. ü§î –ò–º–µ–Ω–Ω–æ –∏–∑ –∑–∞–¥–∞—á —Ä–æ–∂–¥–∞—é—Ç—Å—è –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≥–ª–∞–≤ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–ª–∞–≤ –≤ —Ä–∞–±–æ—Ç–µ).', reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 6:
                await callback.message.edit_text(text='"–ü–æ–ª–µ–∑–Ω—ã–µ —Å–ª–æ–≤–∞" –¥–ª—è –∑–∞–¥–∞—á üòá\n–í—ã—è—Å–Ω–∏—Ç—å, –∏–∑—É—á–∏—Ç—å, –ø—Ä–æ–≤–µ—Å—Ç–∏, —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å, –Ω–∞–π—Ç–∏, –æ–ø–∏—Å–∞—Ç—å', reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 7:
                await callback.message.edit_text(text="–ß–µ–º —è –µ—â—ë –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?", reply_markup=end_of_proc("goal").as_markup())
                await state.clear()
            case 0:
                await callback.message.edit_text(text="–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å–æ –°—Ç—Ä—É–∫—Ç—É—Ä–æ–π –í–ö–† üßê", reply_markup=StructureVKR().structure().as_markup())
                await state.set_state(VKR_States.structure)  
       
@callback_router.callback_query(VKR_States.object)
async def object_proc(callback: CallbackQuery, state: FSMContext):
    
    if "obj_sbj" in callback.data:
        full_callback = callback.data.split(":")
        page_number = int(full_callback[1])
        cb_data = full_callback[0]
        
        match page_number:
            case 1:
                await callback.message.edit_text(text="–ü—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ üòâ:\n–û–±—ä–µ–∫—Ç ‚Äî —ç—Ç–æ —á—Ç–æ-—Ç–æ (–∫—Ç–æ-—Ç–æ), —á—Ç–æ (–∫–æ–≥–æ) —Ç—ã –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –∏–∑—É—á–∞—Ç—å.\n–ü—Ä–µ–¥–º–µ—Ç ‚Äì —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –∏–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –∫–∞–∫–∏–º-—Ç–æ –æ–±—Ä–∞–∑–æ–º –º–æ–≥—É—Ç –Ω–∞ –Ω–µ–≥–æ –≤–ª–∏—è—Ç—å.", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 2:
                await callback.message.edit_text(text="–û–±—ä–µ–∫—Ç ‚Äì —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å / —è–≤–ª–µ–Ω–∏–µ / –∫–æ–º–ø–ª–µ–∫—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å –∏–∑—É—á–∏—Ç—å, –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å.\n–ù–∞–ø—Ä–∏–º–µ—Ä,\n- —Å–æ–æ–±—â–µ—Å—Ç–≤–æ / –≥—Ä—É–ø–ø–∞ üë©üßë\n- –ø–æ–≥–æ–¥–Ω–æ–µ —è–≤–ª–µ–Ω–∏–µ ‚òîÔ∏è\n- –±–∞–Ω–∫–æ–≤—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ / –∑–æ–Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è / —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (—Ä–µ—Å—É—Ä—Å–æ–≤, —Ñ–∏–Ω–∞–Ω—Å–æ–≤, —ç–Ω–µ—Ä–≥–æ–∑–∞—Ç—Ä–∞—Ç, —Ä—ã–Ω–∫–∞, –∏ –ø—Ä.) üè¶\n- —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–æ–µ –ø–æ–Ω—è—Ç–∏–µ ‚≠êÔ∏è\n- –º–∏–∫—Ä–æ–æ—Ä–≥–∞–Ω–∏–∑–º—ã, –º–µ—Ç–∞–ª–ª, –º–∞—Ç–µ—Ä–∏–∞–ª, —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω–∞—è –∑–æ–Ω–∞ üóø\n–∏ —Ç.–¥.", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 3:
                message_change = callback.message.edit_text(text="–ü—Ä–µ–¥–º–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è ‚Äì —ç—Ç–æ —á–∞—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞, –µ–≥–æ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –µ–≥–æ —Å–∏—Å—Ç–µ–º—ã.\n–≠—Ç–æ –º–æ–≥—É—Ç –±—ã—Ç—å –ª—é–±—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ / –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–∏ –∏–∑—É—á–∏—Ç—å, –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å, –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å, —É–ø–æ—Ä—è–¥–æ—á–∏—Ç—å, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –º–µ–∂–¥—É –∏—Ö –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏ —Ç.–¥.\n–ù–∞–ø—Ä–∏–º–µ—Ä,\n- –Ω–µ–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ / —Å—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –ø–æ–¥ –≤–ª–∏—è–Ω–∏–µ–º —Ñ–∞–∫—Ç–æ—Ä–æ–≤ üìà\n- –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞–∫–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤ ‚ÜóÔ∏è\n- –ø–æ—Ä—è–¥–æ–∫ –∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º ‚ÜîÔ∏è\n- –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã—Ö —á–µ—Ä—Ç ‚ú®\n- –ø–æ—Ä—è–¥–æ–∫ –∏—Ö –≤–∑–∞–∏–º–Ω–æ–≥–æ –≤–ª–∏—è–Ω–∏—è –∏–ª–∏ –∏—Ö –≤–ª–∏—è–Ω–∏—è –Ω–∞ –æ–±—ä–µ–∫—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è üîÑ\n–∏ —Ç.–ø.", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
                message_send = callback.message.answer(text="–ü—Ä–µ–¥–º–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è ‚Äì —ç—Ç–æ —á–∞—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞, –µ–≥–æ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –µ–≥–æ —Å–∏—Å—Ç–µ–º—ã.\n–≠—Ç–æ –º–æ–≥—É—Ç –±—ã—Ç—å –ª—é–±—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ / –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–∏ –∏–∑—É—á–∏—Ç—å, –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å, –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å, —É–ø–æ—Ä—è–¥–æ—á–∏—Ç—å, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –º–µ–∂–¥—É –∏—Ö –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏ —Ç.–¥.\n–ù–∞–ø—Ä–∏–º–µ—Ä,\n- –Ω–µ–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ / —Å—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –ø–æ–¥ –≤–ª–∏—è–Ω–∏–µ–º —Ñ–∞–∫—Ç–æ—Ä–æ–≤ üìà\n- –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞–∫–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤ ‚ÜóÔ∏è\n- –ø–æ—Ä—è–¥–æ–∫ –∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º ‚ÜîÔ∏è\n- –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã—Ö —á–µ—Ä—Ç ‚ú®\n- –ø–æ—Ä—è–¥–æ–∫ –∏—Ö –≤–∑–∞–∏–º–Ω–æ–≥–æ –≤–ª–∏—è–Ω–∏—è –∏–ª–∏ –∏—Ö –≤–ª–∏—è–Ω–∏—è –Ω–∞ –æ–±—ä–µ–∫—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è üîÑ\n–∏ —Ç.–ø.", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
                await inner_block(coroutine_obj=(message_change, message_send), state=state)
            case 4:
                data = await state.get_data()
                await data["temp_menu"].delete()
                temp_menu = await bot.send_photo(chat_id=TempData.user_id, photo=PHOTO_ID_THREE, caption="–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ üòá", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
                await state.update_data(temp_menu=temp_menu)
            case 5:
                data = await state.get_data()
                await data["temp_menu"].delete()
                await callback.message.answer(text="–ß–µ–º —è –µ—â—ë –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?", reply_markup=end_of_proc("obj_sbj").as_markup())
                await state.clear()
            case 0:
                await callback.message.edit_text(text="–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å–æ –°—Ç—Ä—É–∫—Ç—É—Ä–æ–π –í–ö–† üßê", reply_markup=StructureVKR().structure().as_markup())
                await state.set_state(VKR_States.structure)  
          
@callback_router.callback_query(VKR_States.hypothesis)
async def hypothesis_proc(callback: CallbackQuery, state: FSMContext):
    
    if "hypothesis" in callback.data:
        full_callback = callback.data.split(":")
        page_number = int(full_callback[1])
        cb_data = full_callback[0]
        
        match page_number:
            case 1:
                await callback.message.edit_text(text="–ì–∏–ø–æ—Ç–µ–∑–∞ - —ç—Ç–æ –Ω–∞—É—á–Ω–æ–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ, –¥–∞—é—â–µ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Ñ–∞–∫—Ç–æ–≤, —è–≤–ª–µ–Ω–∏–π –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–¥–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–ª–∏ –æ–ø—Ä–æ–≤–µ—Ä–≥–Ω—É—Ç—å. üßê", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 2:
                await callback.message.edit_text(text="–í–∏–¥—ã –≥–∏–ø–æ—Ç–µ–∑ ü§î:\n- –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–µ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—â–∏–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ —è–≤–ª–µ–Ω–∏—è / –ø—Ä–æ—Ü–µ—Å—Å–∞)\n- –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–µ (–≤—Å–∫—Ä—ã–≤–∞—é—â–∏–µ –ø—Ä–∏—á–∏–Ω—ã —è–≤–ª–µ–Ω–∏—è / –ø—Ä–æ—Ü–µ—Å—Å–∞)\n- –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω–æ-–æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–µ", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 3:
                message_change = callback.message.edit_text(text='–ì–∏–ø–æ—Ç–µ–∑–∞ –¥–æ–ª–∂–Ω–∞:\n- –±—ã—Ç—å –ø—Ä–æ—Å—Ç–æ–π (–º–µ–Ω—å—à–µ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–æ–ø—É—â–µ–Ω–∏–π ü§®)\n- –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ–π –ø—Ä–∏ –¥–∞–Ω–Ω–æ–º —É—Ä–æ–≤–Ω–µ –∑–Ω–∞–Ω–∏–π (–Ω–µ –±–µ—Ä–∏ –Ω–∞ —Å–µ–±—è —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ üòä)\n- —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ ("–µ—Å–ª–∏... —Ç–æ", "–ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ..." ü§î)\n- –Ω–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –Ω–∞—É—á–Ω—ã–º —Ñ–∞–∫—Ç–∞–º üôÖ‚Äç‚ôÄÔ∏è', reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
                message_send = callback.message.answer(text='–ì–∏–ø–æ—Ç–µ–∑–∞ –¥–æ–ª–∂–Ω–∞:\n- –±—ã—Ç—å –ø—Ä–æ—Å—Ç–æ–π (–º–µ–Ω—å—à–µ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–æ–ø—É—â–µ–Ω–∏–π ü§®)\n- –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ–π –ø—Ä–∏ –¥–∞–Ω–Ω–æ–º —É—Ä–æ–≤–Ω–µ –∑–Ω–∞–Ω–∏–π (–Ω–µ –±–µ—Ä–∏ –Ω–∞ —Å–µ–±—è —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ üòä)\n- —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ ("–µ—Å–ª–∏... —Ç–æ", "–ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ..." ü§î)\n- –Ω–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –Ω–∞—É—á–Ω—ã–º —Ñ–∞–∫—Ç–∞–º üôÖ‚Äç‚ôÄÔ∏è', reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
                await inner_block(coroutine_obj=(message_change, message_send), state=state)
            case 4:
                data = await state.get_data()
                await data["temp_menu"].delete()
                temp_menu = await bot.send_photo(chat_id=TempData.user_id, photo=PHOTO_ID_FOUR, caption="–í–æ—Ç —Å–ø–æ—Å–æ–±—ã –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥–∏–ø–æ—Ç–µ–∑—ã ü§î\n–ò –ø–æ–º–Ω–∏ ü§ì\n–û–¥–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ - –æ–¥–Ω–∞ –≥–∏–ø–æ—Ç–µ–∑–∞", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
                await state.update_data(temp_menu=temp_menu)
            case 5:
                data = await state.get_data()
                await data["temp_menu"].delete()
                await callback.message.answer(text="–ß–µ–º —è –µ—â—ë –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?", reply_markup=end_of_proc("hypothesis").as_markup())
                await state.clear()
            case 0:
                await callback.message.edit_text(text="–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å–æ –°—Ç—Ä—É–∫—Ç—É—Ä–æ–π –í–ö–† üßê", reply_markup=StructureVKR().structure().as_markup())
                await state.set_state(VKR_States.structure)  
          
@callback_router.callback_query(VKR_States.methods)
async def methods_proc(callback: CallbackQuery, state: FSMContext):
    
    if "all_methods" in callback.data:
        page_number = 999 ; method_type = ""
        data = await state.get_data()

        try:
            await message_delition(data["msg_buffer"])
        except (KeyError, TelegramBadRequest):
            pass
    
        try:
            full_callback = callback.data.split(":")
            page_number = int(full_callback[1])
            cb_data = full_callback[0]
        except ValueError:
            full_callback = callback.data.split(":")
            method_type = full_callback[1]
        
        match page_number:
            case 1:
                await callback.message.edit_text(text="""–†–∞–∑–±–µ—Ä–µ–º—Å—è —Å –ø–æ–Ω—è—Ç–∏—è–º–∏ üßê\n\n–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è ‚Äì —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞—É—á–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –Ω–∞—É—á–Ω–æ–≥–æ –¥–∏–∞–≥–Ω–æ–∑–∞.\n\n–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è:\n-—É—á–∏—Ç, –∫–∞–∫ –Ω–∞–¥–æ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —É—á–µ–Ω–æ–º—É –∏–ª–∏ –ø—Ä–∞–∫—Ç–∏–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–∏–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç;\n-–∏—Å—Å–ª–µ–¥—É–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã, –ª–æ–≥–∏–∫—É –¥–≤–∏–∂–µ–Ω–∏—è –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∑–Ω–∞–Ω–∏—è;\n-–≤—ã—è–≤–ª—è–µ—Ç –∑–∞–∫–æ–Ω—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞–Ω–∏—è;\n-–∏–∑—É—á–∞–µ—Ç –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ö–µ–º—ã –Ω–∞—É–∫–∏ –∏ —Ç.–ø.""", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 2:
                await callback.message.edit_text(text="–ú–µ—Ç–æ–¥–∏–∫–∞ ‚Äì —ç—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –∫–∞–∫ –≤—ã—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å—É–±—ä–µ–∫—Ç–∞ –∏ –æ–±—ä–µ–∫—Ç–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã.", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 3:
                await callback.message.edit_text(text="""–ú–µ—Ç–æ–¥ (–æ—Ç –≥—Ä–µ—á. methodos - –ø—É—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, —Ç–µ–æ—Ä–∏—è, —É—á–µ–Ω–∏–µ) - "—Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∫–∞–∫–æ–π-–ª–∏–±–æ —Ü–µ–ª–∏, —Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏; —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç—å –ø—Ä–∏–µ–º–æ–≤ –∏–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Å–≤–æ–µ–Ω–∏—è (–ø–æ–∑–Ω–∞–Ω–∏—è) –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏". \n–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–µ—Ç–æ–¥–∞ - –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–∑–Ω–∞–Ω–∏—è –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–æ–≥–æ –∏–ª–∏ –∏–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞. –ü–æ—ç—Ç–æ–º—É –º–µ—Ç–æ–¥ (–≤ —Ç–æ–π –∏–ª–∏ –∏–Ω–æ–π —Å–≤–æ–µ–π —Ñ–æ—Ä–º–µ) —Å–≤–æ–¥–∏—Ç—Å—è –∫ —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª, –ø—Ä–∏–µ–º–æ–≤, —Å–ø–æ—Å–æ–±–æ–≤, –Ω–æ—Ä–º –ø–æ–∑–Ω–∞–Ω–∏—è –∏ –¥–µ–π—Å—Ç–≤–∏—è.""", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())
            case 4:
                await callback.message.edit_text(text="–û–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –≤–∏–¥–∞–º–∏ –º–µ—Ç–æ–¥–æ–≤ –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏", reply_markup=methods().as_markup())
            case 0:
                await callback.message.edit_text(text="–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å–æ –°—Ç—Ä—É–∫—Ç—É—Ä–æ–π –í–ö–† üßê", reply_markup=vkr().as_markup())
                await state.clear() 
            
        match method_type:
            case "back_to_methods":
                await callback.message.edit_text(text="–û–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –≤–∏–¥–∞–º–∏ –º–µ—Ç–æ–¥–æ–≤ –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏", reply_markup=methods().as_markup())                            
    elif callback.data == "structure":
        await callback.message.edit_text(text="–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å–æ –°—Ç—Ä—É–∫—Ç—É—Ä–æ–π –í–ö–† üßê", reply_markup=vkr().as_markup())
        await state.clear() 
    elif "gen_methods" in callback.data:
        data = await state.get_data()
        page_number = 999 ; method_type = ""
        
        try:
            await message_delition(data["msg_buffer"])
        except (KeyError, TelegramBadRequest):
            pass
        
        try:
            full_callback = callback.data.split(":")
            page_number = int(full_callback[1])
            cb_data = full_callback[0]
        except ValueError:
            full_callback = callback.data.split(":")
            method_type = full_callback[1]
        
        match page_number:
            case 1:
                await callback.message.edit_text(text="–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã —è–≤–ª—è—é—Ç—Å—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º–∏ –∏ —Å–ª—É–∂–∞—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ñ–∞–∫—Ç–æ–≤ –≤ –Ω–∞—É—á–Ω–æ–π —Ä–∞–±–æ—Ç–µ.", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())    
            case 2:
                await callback.message.edit_text(text="–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã", reply_markup=methods(methods_type="general").as_markup())    
            case 0:
                await callback.message.edit_text(text="–û–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –≤–∏–¥–∞–º–∏ –º–µ—Ç–æ–¥–æ–≤ –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏", reply_markup=methods().as_markup())

        match method_type:
            case "analysis":
                message_one = await callback.message.answer(text="–ê–Ω–∞–ª–∏–∑ ‚úèÔ∏è\n\n–ù–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –º–µ—Ç–æ–¥.\n–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ—Å–Ω–æ–≤–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ–ø–∏—Ä–∞–µ—Ç—Å—è –Ω–∞ –∞–Ω–∞–ª–∏–∑, –ø—Ä–∏–∑–≤–∞–Ω–∞ —Ä–∞–∑–ª–æ–∂–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∏–ª–∏ –æ–ø–∏—Å—ã–≤–∞–µ–º–æ–µ —è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–∏–∑–Ω–∞–∫–∏ –∏ —Å–≤–æ–π—Å—Ç–≤–∞, —á—Ç–æ–±—ã –∏–∑—É—á–∏—Ç—å –µ–≥–æ –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ.\n–í –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–º–µ—Ä–∞ –º–æ–∂–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ —á–∞—Å—Ç—ã–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ç–∏–ª–µ–π, –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Ä–∞–∑–Ω—ã—Ö –º–∞—Ä–æ–∫, —Å—Ç–∏–ª–µ–π –≤—ã—Ä–∞–∂–µ–Ω–∏—è –º—ã—Å–ª–µ–π –ø–∏—Å–∞—Ç–µ–ª–µ–π –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.")
                message_two = await callback.message.answer(text="–°–∏–Ω—Ç–µ–∑ üîç\n\n–í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å–∏–Ω—Ç–µ–∑ —Å–æ–µ–¥–∏–Ω—è–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (—Å–≤–æ–π—Å—Ç–≤–∞, –ø—Ä–∏–∑–Ω–∞–∫–∏) –≤ –µ–¥–∏–Ω–æ–µ —Ü–µ–ª–æ–µ –¥–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è.\n–ú–µ—Ç–æ–¥—ã —Å–∏–Ω—Ç–µ–∑–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –≤–º–µ—Å—Ç–µ –∫–∞–∫ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –æ—Å–Ω–æ–≤—É –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–π—Ç–∏ —Ä–∞–∑–ª–∏—á–∏—è, –∞ –ø–æ—Ç–æ–º —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—ä–µ–¥–∏–Ω—è—é—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.")
                await state.update_data(msg_buffer=(message_one, message_two))
            case "modeling":
                message_one = await callback.message.answer(text="–ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ üåê\n\n–ü—Ä–∏ —ç—Ç–æ–º –º–µ—Ç–æ–¥–µ –æ–±—ä–µ–∫—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏, –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—Å—è –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å. –î–µ–ª–∞–µ—Ç—Å—è —ç—Ç–æ —Å —Ü–µ–ª—å—é –±–æ–ª–µ–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Ç—É–∞—Ü–∏–π –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä—É–¥–Ω–æ –±—ã–ª–æ –±—ã –¥–æ—Å—Ç–∏—á—å –≤ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.")
                await state.update_data(msg_buffer=(message_one,))
            case "analogy":
                message_one = await callback.message.answer(text="–ê–Ω–∞–ª–æ–≥–∏—è üëØ\n\n–ü—Ä–∏ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –æ—Å–Ω–æ–≤–µ –≤ –≤–∏–¥–µ –∞–Ω–∞–ª–æ–≥–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ–∏—Å–∫ —Å—Ö–æ–¥—Å—Ç–≤–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏ —è–≤–ª–µ–Ω–∏–π –ø–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –ø—Ä–∏–∑–Ω–∞–∫–∞–º. –ò –Ω–∞ —ç—Ç–æ–º —Å—Ö–æ–¥—Å—Ç–≤–µ –¥–µ–ª–∞—é—Ç –≤—ã–≤–æ–¥—ã.")
                await state.update_data(msg_buffer=(message_one,))
            case "de&in_duction":
                message_one = await callback.message.answer(text="–î–µ–¥—É–∫—Ü–∏—è üåè‚û°Ô∏èüíÅ‚Äç‚ôÄÔ∏è\n\n–ú–µ—Ç–æ–¥ –¥–µ–¥—É–∫—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–¥–µ–ª–∞—Ç—å –≤—ã–≤–æ–¥—ã –æ–± –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö —è–≤–ª–µ–Ω–∏—è—Ö –∏ –ø—Ä–µ–¥–º–µ—Ç–∞—Ö, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –æ–±—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –ó–¥–µ—Å—å –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø –æ—Ç –æ–±—â–µ–≥–æ –∫ —á–∞—Å—Ç–Ω–æ–º—É.")
                message_two = await callback.message.answer(text="–ò–Ω–¥—É–∫—Ü–∏—è üíÅ‚Äç‚ôÄÔ∏è‚û°Ô∏èüåè\n\n–í –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ—Å—Ç—å –∫ –¥–µ–¥—É–∫—Ü–∏–∏ –∏–Ω–¥—É–∫—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –ø—Ä–∏–Ω—Ü–∏–ø–µ –æ—Ç —á–∞—Å—Ç–Ω–æ–≥–æ –∫ –æ–±—â–µ–º—É. –ò –ø–æ–±—É–∂–¥–∞–µ—Ç –≤–µ—Å—Ç–∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤ –∫ –æ–±—â–µ–π –∫–∞—Ä—Ç–∏–Ω–µ.")
                await state.update_data(msg_buffer=(message_one, message_two))
            case "summarize":
                message_one = await callback.message.answer(text="–û–±–æ–±—â–µ–Ω–∏–µ ü§≤\n\n–ú–µ—Ç–æ–¥ –æ–±–æ–±—â–µ–Ω–∏—è —á–µ–º-—Ç–æ —Å—Ö–æ–∂ —Å –¥–µ–¥—É–∫—Ü–∏–µ–π. –ó–¥–µ—Å—å —Ç–∞–∫–∂–µ –¥–µ–ª–∞–µ—Ç—Å—è –æ–±—â–∏–π –≤—ã–≤–æ–¥ –æ –ø—Ä–µ–¥–º–µ—Ç–∞—Ö –∏–ª–∏ —è–≤–ª–µ–Ω–∏—è—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–Ω–æ–≥–∏—Ö –º–µ–ª–∫–∏—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤.\n–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Ä–∞–∑–ª–∏—á–∞—é—Ç:\n- –∏–Ω–¥—É–∫—Ç–∏–≤–Ω–æ–µ –æ–±–æ–±—â–µ–Ω–∏–µ (—ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–µ) ‚Äî –ø–µ—Ä–µ—Ö–æ–¥ –æ—Ç –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –∏–ª–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏ —è–≤–ª–µ–Ω–∏—è –∫ –±–æ–ª–µ–µ –æ–±—â–∏–º;\n- –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–æ–±—â–µ–Ω–∏–µ ‚Äî –ø–µ—Ä–µ—Ö–æ–¥ –æ—Ç –æ–¥–Ω–æ–≥–æ –º–Ω–µ–Ω–∏—è –∫ –¥—Ä—É–≥–æ–º—É –≤ —Ö–æ–¥–µ –º—ã—Å–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–π –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —Ç–æ –µ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –æ–ø—ã—Ç–æ–≤.")
                await state.update_data(msg_buffer=(message_one,))
            case "classification":
                message_one = await callback.message.answer(text="–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è ‚ÜôÔ∏è‚¨áÔ∏è‚ÜòÔ∏è\n\n–ú–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç –¥–µ–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–ª–∏ —è–≤–ª–µ–Ω–∏—è –Ω–∞ –≥—Ä—É–ø–ø—ã –ø–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –ø—Ä–∏–∑–Ω–∞–∫–∞–º. –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞ ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å, —Å–¥–µ–ª–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –±–æ–ª–µ–µ —á—ë—Ç–∫–æ–π –∏ –ø–æ–Ω—è—Ç–Ω–æ–π –¥–ª—è —É—Å–≤–æ–µ–Ω–∏—è.")
                message_two = await callback.message.answer(text="–ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –º–æ–∂–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤. ü§î\n\n–ù–∞–ø—Ä–∏–º–µ—Ä:\n- –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º —Å–≤–æ–π—Å—Ç–≤–∞–º (–≤–µ—Å—É, —Ä–∞–∑–º–µ—Ä—É, –æ–±—ä—ë–º—É);\n- –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª—É (–ø–ª–∞—Å—Ç–∏–∫, –¥–µ—Ä–µ–≤–æ, –º–µ—Ç–∞–ª–ª, —Ñ–∞—Ä—Ñ–æ—Ä);\n- –ø–æ –∂–∞–Ω—Ä–∞–º (—Å–∫—É–ª—å–ø—Ç—É—Ä–∞, –∂–∏–≤–æ–ø–∏—Å—å, –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞);\n- –ø–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–º —Å—Ç–∏–ª—è–º;\n- –ø–æ –≥–µ–æ–ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–º —Ñ–∞–∫—Ç–æ—Ä–∞–º;\n- –ø–æ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏ –∏ –¥—Ä.")
                await state.update_data(msg_buffer=(message_one, message_two))
            case "abstracting":
                message_one = await callback.message.answer(text="–ê–±—Å—Ç—Ä–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ üåå\n\n–í –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞ –ª–µ–∂–∏—Ç –∫–æ–Ω–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∫–∞–∫–æ–≥–æ-—Ç–æ –æ—Ç–¥–µ–ª—å–Ω–æ –≤–∑—è—Ç–æ–≥–æ —è–≤–ª–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–∑—É—á–∏—Ç—å –≤ —Ä–∞–º–∫–∞—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. –°—É—Ç—å –∞–±—Å—Ç—Ä–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî –∏–∑—É—á–∏—Ç—å –∫–∞–∫–æ–µ-—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –∏—Å—Å–ª–µ–¥—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞, –Ω–µ —É—á–∏—Ç—ã–≤–∞—è –ø—Ä–∏ —ç—Ç–æ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏.")
                message_two = await callback.message.answer(text="üí° –ú–µ—Ç–æ–¥ –∞–±—Å—Ç—Ä–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –≤–∞–∂–Ω—ã—Ö –∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –¥–∏–ø–ª–æ–º–Ω–æ–π —Ä–∞–±–æ—Ç–µ –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω–æ–≥–æ —É–∫–ª–æ–Ω–∞. –° –µ–≥–æ –ø–æ–º–æ—â—å—é —Å–º–æ–≥–ª–∏ –æ—Ç–º–µ—Ç–∏—Ç—å –Ω–µ–∑–∞–º–µ—Ç–Ω—ã–µ –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–∑–≥–ª—è–¥, –Ω–æ –≤–∞–∂–Ω–µ–π—à–∏–µ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏ –≤ —Ç–∞–∫–∏—Ö –Ω–∞—É–∫–∞—Ö, –∫–∞–∫ –ø–µ–¥–∞–≥–æ–≥–∏–∫–∞, –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è, —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è.")
                await state.update_data(msg_buffer=(message_one, message_two))
            case "formalization":
                message_one = await callback.message.answer(text="–§–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è üìä\n\n–°—É—Ç—å –º–µ—Ç–æ–¥–∞ —Ñ–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ ‚Äî –ø–µ—Ä–µ–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–ª–∏ —Å—É—â–Ω–æ—Å—Ç—å —è–≤–ª–µ–Ω–∏—è (–æ–±—ä–µ–∫—Ç–∞) —á–µ—Ä–µ–∑ –∑–Ω–∞–∫–æ–≤—É—é –º–æ–¥–µ–ª—å, –∏—Å–ø–æ–ª—å–∑—É—è –¥–ª—è —ç—Ç–æ–≥–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ö–µ–º—ã, —Ñ–æ—Ä–º—É–ª—ã –∏–ª–∏ —Å–∏–º–≤–æ–ª—ã.")
                await state.update_data(msg_buffer=(message_one,))
            case "specification":
                message_one = await callback.message.answer(text="–ö–æ–Ω–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏—è üëâüëà\n\n–ü–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–µ–π –ø–æ–Ω–∏–º–∞—é—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ —è–≤–ª–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö.")
                await state.update_data(msg_buffer=(message_one,))        
    elif "loc_methods" in callback.data:
        data = await state.get_data()
        page_number = 999 ; method_type = ""
        
        try:
            await message_delition(data["msg_buffer"])
        except (KeyError, TelegramBadRequest):
            pass
        
        try:
            full_callback = callback.data.split(":")
            page_number = int(full_callback[1])
            cb_data = full_callback[0]
        except ValueError:
            full_callback = callback.data.split(":")
            method_type = full_callback[1]
        
        match page_number:
            case 1:
                await callback.message.edit_text(text="–≠–º–ø–∏—Ä–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –¥–∏–ø–ª–æ–º–Ω–æ–π —Ä–∞–±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –¥–ª—è —Å–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ —è–≤–ª–µ–Ω–∏–∏ –∏–ª–∏ –æ–±—ä–µ–∫—Ç–µ. –≠—Ç–∏ –º–µ—Ç–æ–¥—ã –ø–æ–º–æ–≥–∞—é—Ç –æ–ø–∏—Å–∞—Ç—å –∏ –≤—ã—è–≤–∏—Ç—å –Ω–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–º–µ—Ç—ã, –Ω–∞–π—Ç–∏ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏ –∏–ª–∏ –¥–æ–∫–∞–∑–∞—Ç—å –≥–∏–ø–æ—Ç–µ–∑—ã.", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())    
            case 2:
                await callback.message.edit_text(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ —ç–º–ø–∏—Ä–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ '–≠–º–ø–∏—Ä–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å' –í–ö–†.", reply_markup=page_surfer(page_n=page_number, callback_data=cb_data).as_markup())    
            case 3:
                await callback.message.edit_text(text="–í—ã–±–∏—Ä–∞–π —É—Ä–æ–≤–µ–Ω—å '–ø–æ–≥—Ä—É–∂–µ–Ω–∏—è'", reply_markup=immertion_lvl().as_markup())    
            case 0:
                await callback.message.edit_text(text="–û–∑–Ω–∞–∫–æ–º–∏–º—Å—è —Å –≤–∏–¥–∞–º–∏ –º–µ—Ç–æ–¥–æ–≤ –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏", reply_markup=methods().as_markup())
        
        match method_type:
            case "shortly_methods":
                await callback.message.edit_text(text="–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã", reply_markup=methods(methods_type="practical").as_markup())
            case "fully_methods":
                await state.set_state(VKR_States.practice)
                await callback.message.edit_text(text="–ö–∞–∫ –¥–µ–ª–∞—Ç—å –ø—Ä–∞–∫—Ç–∏–∫—É?\n–ó–¥–µ—Å—å —Å–æ–±—Ä–∞–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è", reply_markup=practical_part().as_markup())
            case "description":
                message_one = await callback.message.answer(text="–ù–∞–±–ª—é–¥–µ–Ω–∏–µ üëÄ\n\n–í –æ—Å–Ω–æ–≤–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –ª–µ–∂–∏—Ç –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Å–≤–æ–π—Å—Ç–≤–∞—Ö –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. \n\n–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ª—é–±–æ–µ –Ω–∞—É—á–Ω–æ–µ –ø–æ–∑–Ω–∞–Ω–∏–µ, –≤–æ—Ç –ø–æ—á–µ–º—É –µ–≥–æ —Å—á–∏—Ç–∞—é—Ç –∫–ª—é—á–µ–≤—ã–º –ø—Ä–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ –ª—é–±—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π.\n\n–°—É—Ç—å –º–µ—Ç–æ–¥–∞ —Å–æ—Å—Ç–æ–∏—Ç –≤ —Ç–æ–º, —á—Ç–æ–±—ã –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –æ–±—ä–µ–∫—Ç–æ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –ª—é–±—ã–µ –≤–∞–∂–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–µ, —Ä–µ–∞–∫—Ü–∏—è—Ö, —Å–≤–æ–π—Å—Ç–≤–∞—Ö –∏–ª–∏ –µ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.")
                message_two = await callback.message.answer(text="–û–ø–∏—Å–∞–Ω–∏–µ üëÄüîç\n\n–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –æ—Ç–º–µ—á–∞—é—Ç —Å—Ö–æ–¥—Å—Ç–≤–æ –¥–∞–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ —Å –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ–º. –ü—Ä–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –º–µ—Ç–æ–¥–æ–º –æ–ø–∏—Å–∞–Ω–∏—è —Ñ–∏–∫—Å–∏—Ä—É—é—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ —è–≤–ª–µ–Ω–∏—è, –Ω–æ —Ç–∞–∫–∂–µ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∏ –ø—Ä–∏–∑–Ω–∞–∫–∏ –æ–±—ä–µ–∫—Ç–∞ –∏–∑—É—á–µ–Ω–∏—è.")
                await state.update_data(msg_buffer=(message_one, message_two))
            case "comparison":
                message_one = await callback.message.answer(text="–°—Ä–∞–≤–Ω–µ–Ω–∏–µ üë©üßë\n\n–ú–µ—Ç–æ–¥ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö. –ï–≥–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–≤—É—Ö –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ –∫–∞–∫–æ–º—É-—Ç–æ –æ–¥–Ω–æ–º—É –ø—Ä–∏–∑–Ω–∞–∫—É.")
                await state.update_data(msg_buffer=(message_one,))   
            case "experiment":
                message_one = await callback.message.answer(text="–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç üß™\n\n–ú–µ—Ç–æ–¥ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ —Ç–æ–ª–∫—É–µ—Ç—Å—è –∫–∞–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∏–ª–∏ —è–≤–ª–µ–Ω–∏—è –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö. –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–º –º–æ–∂–µ—Ç —Å–ª—É–∂–∏—Ç—å —Ç–∞–∫–∂–µ –æ–ø—ã—Ç, —Ü–µ–ª—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ (–æ–ø—Ä–æ–≤–µ—Ä–∂–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ) –∏–º–µ—é—â–∏—Ö—Å—è –ø–æ–ª–æ–∂–µ–Ω–∏–π.")
                message_two = await callback.message.answer(text="–ì–ª–∞–≤–Ω–æ–µ ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–≤–∞ –∫—Ä–∏—Ç–µ—Ä–∏—è –≥—Ä–∞–º–æ—Ç–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º–æ—Å—Ç—å. –í–µ–¥—å –∑–∞–¥–∞—á–∞ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º, —á—Ç–æ–±—ã –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–≥–ª—è–¥–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ, –Ω–æ –∏ –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –µ–≥–æ –º–æ–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ. üíÅ‚Äç‚ôÄÔ∏è")
                await state.update_data(msg_buffer=(message_one, message_two))
            case "measurement":
                message_one = await callback.message.answer(text="–ò–∑–º–µ—Ä–µ–Ω–∏–µ üìè\n\n–ú–µ—Ç–æ–¥ –∏–∑–º–µ—Ä–µ–Ω–∏—è ‚Äî –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö. –†–µ—á—å –∏–¥—ë—Ç –æ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –∫–∞–∫–∏—Ö –±—ã —Ç–æ –Ω–∏ –±—ã–ª–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±—ä–µ–∫—Ç–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (–æ–±—ä—ë–º, —Ä–æ—Å—Ç, –≤–µ—Å, –¥–ª–∏–Ω–∞ –∏ –ø—Ä–æ—á–∏–µ) —Å –ø–æ–º–æ—â—å—é –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è. –†–µ–∑—É–ª—å—Ç–∞—Ç, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –≤ —Ö–æ–¥–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞, –±—É–¥–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —á–∏—Å–ª–æ–≤–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏.")
                await state.update_data(msg_buffer=(message_one,))   
            case "modeling":
                message_one = await callback.message.answer(text="–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ üåê\n\n–í –æ–±—â–µ–º —Å–º—ã—Å–ª–µ –º–æ–¥–µ–ª—å ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –æ–±—Ä–∞–∑ —á–µ–≥–æ-—Ç–æ, –∏–º–∏—Ç–∞—Ü–∏—è –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤.\n\n–ë–µ–∑ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –æ–±–æ–π—Ç–∏—Å—å –ø—Ä–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤–µ–π—à–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –∫–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, —Å–æ–æ—Ä—É–∂–µ–Ω–∏–π –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.")
                await state.update_data(msg_buffer=(message_one,)) 
            case "interview":
                message_one = await callback.message.answer(text="–ë–µ—Å–µ–¥–∞ –∏ –∏–Ω—Ç–µ—Ä–≤—å—é üëÑüëÇ\n\n–°—É—Ç—å –æ–±–æ–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏ –æ–ø—Ä–æ—Å–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–±–ª–∞–¥–∞–µ—Ç –∫–∞–∫–æ–π-–ª–∏–±–æ —Ü–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∏–∑—É—á–∞–µ–º–æ–º –ø—Ä–µ–¥–º–µ—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.")
                message_two = await callback.message.answer(text="–í —á–µ–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –±–µ—Å–µ–¥–æ–π –∏ –∏–Ω—Ç–µ—Ä–≤—å—é? ü§∑‚Äç‚ôÇÔ∏è\n\n–ò–Ω—Ç–µ—Ä–≤—å—é –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –±–æ–ª–µ–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º: –≤ —Ö–æ–¥–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤—å—é —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —á—ë—Ç–∫–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä –∑–∞–≥–æ—Ç–æ–≤–∏–ª –∑–∞—Ä–∞–Ω–µ–µ. –ö—Ä–æ–º–µ —Ç–æ–≥–æ, —á–µ–ª–æ–≤–µ–∫, –∑–∞–¥–∞—é—â–∏–π –≤–æ–ø—Ä–æ—Å—ã, –Ω–∏–∫–∞–∫ –Ω–µ –¥–æ–ª–∂–µ–Ω –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—ë –æ—Ç–Ω–æ—à–µ–Ω–∏–µ.")
                await state.update_data(msg_buffer=(message_one, message_two))
            case "group":
                message_one = await callback.message.answer(text="–§–æ–∫—É—Å-–≥—Ä—É–ø–ø–∞ üë©üßëüë©‚Äçü¶±\n\n–≠—Ç–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –≥—Ä—É–ø–ø–æ–≤–æ–µ –∏–Ω—Ç–µ—Ä–≤—å—é —Å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è–º–∏ —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏.\n\n–í –ø—Ä–æ—Ü–µ—Å—Å–µ —Ñ–æ–∫—É—Å-–≥—Ä—É–ø–ø—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –æ–±—Å—É–∂–¥–∞—é—Ç –∑–∞–¥–∞–Ω–Ω—É—é —Ç–µ–º—É, –≤—ã—Å–∫–∞–∑—ã–≤–∞—é—Ç —Å–≤–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –≤–æ–ø—Ä–æ—Å—É, –æ–±–º–µ–Ω–∏–≤–∞—é—Ç—Å—è –º–Ω–µ–Ω–∏—è–º–∏, –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–¥–µ–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–ª–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤.")
                await state.update_data(msg_buffer=(message_one,)) 
            case "survey":
                message_one = await callback.message.answer(text="–û–ø—Ä–æ—Å –∏ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ üìÉ\n\n–î–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Ç–∞–∫–∂–µ –∏–º–µ—é—Ç –º–Ω–æ–≥–æ –æ–±—â–µ–≥–æ –º–µ–∂–¥—É —Å–æ–±–æ–π. –ò—Ö —Å—É—Ç—å –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –≤–æ–ø—Ä–æ—Å–æ–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç—ã. –û—Ç–≤–µ—á–∞—é—â–∏–º –º–æ–≥—É—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≥–æ—Ç–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤—ã–±–æ—Ä.\n\n–û—Å–Ω–æ–≤–Ω–æ–µ –æ—Ç–ª–∏—á–∏–µ –æ–ø—Ä–æ—Å–∞ –æ—Ç –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ–∏—Ç –≤ —Ñ–æ—Ä–º–µ –∏—Ö –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è. –û–ø—Ä–æ—Å, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ —É—Å—Ç–Ω—ã–º, —Ç–∞–∫ –∏ –ø–∏—Å—å–º–µ–Ω–Ω—ã–º. –ê –≤–æ—Ç –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–∏—Å—å–º–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ù–µ—Ä–µ–¥–∫–æ –≤–æ –≤—Ä–µ–º—è –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç –º–æ–∂–Ω–æ –¥–∞–≤–∞—Ç—å –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –≤–∏–¥–µ.")
                message_two = await callback.message.answer(text="üí° –ü–ª—é—Å–æ–º —ç—Ç–∏—Ö –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –≤ –¥–∏–ø–ª–æ–º–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –±–æ–ª—å—à–æ–π –æ—Ö–≤–∞—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏. –í–µ–¥—å –µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–æ—Å–∏—Ç—å –º–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫, —Ç–æ –∏ —à–∞–Ω—Å–æ–≤ –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞–º–Ω–æ–≥–æ –≤—ã—à–µ.")
                await state.update_data(msg_buffer=(message_one, message_two))
                    
@callback_router.callback_query(VKR_States.ending)
async def ending_proc(callback: CallbackQuery, state: FSMContext):
    if callback.data in ("summirize", "source_lst", "attachments"):
        await callback.answer(text="–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    elif callback.data == "VKR":
        await callback.message.edit_text(reply_markup=vkr().as_markup(), text="–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ –í–ö–† üòá?")
        await state.clear()
                    
@callback_router.callback_query(lambda x: x) # —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–Ω–æ 
# –∑–∞–ø—Ä–æ—Å–æ–≤ —Ç–∏–ø–∞ CallbackQuery, –Ω–∞ —á—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ .callback_query 
# –º–æ–∂–Ω–æ –∑–∞–º–µ—Ç–∏—Ç—å, —á—Ç–æ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –ª—é–±–æ–π callback-–∑–∞–ø—Ä–æ—Å 
async def button_exe(callback: CallbackQuery, state: FSMContext): # —Ç–∞–º —Ç–∞–∫ –∂–µ –≤–∞–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞—à–µ–≥–æ
    # callback-–∞ –≤ –≤–∏–¥–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–µ–≥–æ —Ç–∏–ø–∞
    
    if callback.data == "VKR":
        await callback.message.edit_text(reply_markup=vkr().as_markup(), text="–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ –í–ö–† üòá?")
    elif callback.data == "wk_type_back":
        await callback.message.edit_text(reply_markup=type_of_work().as_markup(), text="–¢–∏–ø –Ω–∞—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã")
    elif callback.data == "proc_end":
        await callback.message.edit_text(text="–í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! –ñ–µ–ª–∞—é —É–¥–∞—á–∏!üçÄ")
    elif callback.data == "structure":
        await callback.message.edit_text(text="–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å–æ –°—Ç—Ä—É–∫—Ç—É—Ä–æ–π –í–ö–† üßê", reply_markup=StructureVKR().structure().as_markup())
        await state.set_state(VKR_States.structure)
    elif callback.data == "sources":
        await callback.message.edit_text(text="–õ–∏—Ç–æ–±–∑–æ—Ä –∏ —Ä–∞–±–æ—Ç–∞ —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏", reply_markup=liter_review().as_markup())
        await state.set_state(VKR_States.lit_review)
    elif callback.data == "empirical_part":
        await callback.message.edit_text(text="–ö–∞–∫ –¥–µ–ª–∞—Ç—å –ø—Ä–∞–∫—Ç–∏–∫—É?\n–ó–¥–µ—Å—å —Å–æ–±—Ä–∞–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è", reply_markup=practical_part().as_markup())
        await state.set_state(VKR_States.practice)
    elif callback.data == "hypothesis:1":
        await first_state_entry(cb_data=callback,
                                state_tuple=(state, VKR_States.hypothesis),
                                cb_text="–ì–∏–ø–æ—Ç–µ–∑–∞ - —ç—Ç–æ –Ω–∞—É—á–Ω–æ–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ, –¥–∞—é—â–µ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Ñ–∞–∫—Ç–æ–≤, —è–≤–ª–µ–Ω–∏–π –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–¥–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–ª–∏ –æ–ø—Ä–æ–≤–µ—Ä–≥–Ω—É—Ç—å. üßê")
    elif callback.data in ("course", "abstract", "article", "report", "content_analysis", "quoting", "lit_list", "suggest"):
        await callback.answer(text="–§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    elif callback.data == "all_methods:1":
        await first_state_entry(cb_data=callback,
                                state_tuple=(state, VKR_States.methods),
                                cb_text="""–†–∞–∑–±–µ—Ä–µ–º—Å—è —Å –ø–æ–Ω—è—Ç–∏—è–º–∏ üßê\n–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è ‚Äì —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞—É—á–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –Ω–∞—É—á–Ω–æ–≥–æ –¥–∏–∞–≥–Ω–æ–∑–∞.\n\n–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è:\n-—É—á–∏—Ç, –∫–∞–∫ –Ω–∞–¥–æ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —É—á–µ–Ω–æ–º—É –∏–ª–∏ –ø—Ä–∞–∫—Ç–∏–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–∏–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç;\n-–∏—Å—Å–ª–µ–¥—É–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã, –ª–æ–≥–∏–∫—É –¥–≤–∏–∂–µ–Ω–∏—è –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∑–Ω–∞–Ω–∏—è;\n-–≤—ã—è–≤–ª—è–µ—Ç –∑–∞–∫–æ–Ω—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞–Ω–∏—è;\n-–∏–∑—É—á–∞–µ—Ç –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ö–µ–º—ã –Ω–∞—É–∫–∏ –∏ —Ç.–ø.""")
    elif callback.data == "ending":
        await callback.message.edit_text(text="–ó–∞–≤–µ—Ä—à–∞—é—â–∏–º —ç—Ç–∞–ø–æ–º –Ω–∞–ø–∏—Å–∞–Ω–∏—è –í–ö–† —è–≤–ª—è—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ –±–ª–æ–∫–∏", reply_markup=ending().as_markup())
        await state.set_state(VKR_States.ending)




